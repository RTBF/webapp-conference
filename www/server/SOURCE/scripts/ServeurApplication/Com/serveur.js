// Generated by CoffeeScript 1.4.0
var Serveur, app, dbrequest, express, indice, io, server, serveur,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

express = require('express');

app = express();

server = require('http').createServer(app);

io = require('socket.io').listen(server);

dbrequest = require('./DBRequest.js');

indice = 0;

server.listen(3000);

io.set('log level', 1);

io.set('transports', ['websocket', 'flashsocket', 'htmlfile', 'xhr-polling', 'jsonp-polling']);

Serveur = (function() {

  function Serveur() {
    this.brodcastSlide = __bind(this.brodcastSlide, this);
    console.log("construction");
    this.init();
  }

  Serveur.prototype.init = function() {
    var _this = this;
    console.log(dbrequest.readOrganisations('515c1b1950e5c6a674000001'));
    return io.sockets.on('connection', function(socket) {
      socket.on('admin', function(data) {
        return console.log('admin connected');
      });
      socket.on('reset', function(data) {
        console.log('admin asks for reseting');
        return socket.broadcast.emit('sreset', data);
      });
      socket.on('user', function(data) {
        socket.name = data.name;
        return console.log('user connected');
      });
      socket.on('next', function(data) {
        return _this.brodcastSlide('snext', data, socket);
      });
      return socket.on('remove', function(data) {
        return _this.brodcastSlide('sremove', data, socket);
      });
    });
  };

  Serveur.prototype.brodcastSlide = function(message, data, socket) {
    socket.emit(message, data);
    return socket.broadcast.emit(message, data);
  };

  return Serveur;

})();

serveur = new Serveur();
