// Generated by CoffeeScript 1.4.0
var DBRequest, test;

test = "i am exported too";

DBRequest = (function() {

  function DBRequest() {
    this.mongoose = require('mongoose');
    this.Schema = this.mongoose.Schema;
    this.Admin = require('../Models/Admin.js');
    this.Slide = require('../Models/Slide.js');
    this.Organisation = require("../Models/Organisation.js");
    this.Conference = require("../Models/Conference.js");
    this.dsn = "mongodb://localhost/WebConference";
    this.mongoose.connect(this.dsn);
    this.init();
  }

  DBRequest.prototype.init = function() {};

  DBRequest.prototype.readOrganisations = function(AdminId) {
    var confDB, organisation,
      _this = this;
    organisation = null;
    confDB = this.mongoose.connection;
    confDB.on('error', console.error.bind(console, 'connection error:'));
    confDB.once('open', function() {
      console.log(AdminId);
      _this.Admin.findOne({
        _id: AdminId
      }, function(err, admin) {
        console.log("callback launched");
        if (err) {
          return console.log("error while trying to find the organisations of this admin");
        }
      }).populate('organisations').exec(function(err, admin) {
        organisation = JSON.stringify(admin.organisations);
        return console.log("premier log:", organisation);
      });
      return console.log("deuxieme log:", organisation);
    });
    return organisation;
  };

  DBRequest.prototype.readConference = function(OrgId) {
    var Confs,
      _this = this;
    Confs = null;
    Organisation.findOne({
      _id: OrgId
    }, function(err, organisation) {
      if (err) {
        return console.log("error while trying to find the organisations of this admin");
      }
    }).populate('conferences').exec(function(err, organisation) {
      return Confs = JSON.stringify(organisation.conferences);
    });
    return Confs;
  };

  DBRequest.prototype.readSlideList = function(ConfId) {
    var slides,
      _this = this;
    slides = null;
    Conference.findOne({
      _id: ConfId
    }, function(err, conference) {
      if (err) {
        return console.log("error while trying to find the organisations of this admin");
      }
    }).populate('slides').exec(function(err, conference) {
      return slides = JSON.stringify(conference.slides);
    });
    return slides;
  };

  return DBRequest;

})();

module.exports = new DBRequest;
